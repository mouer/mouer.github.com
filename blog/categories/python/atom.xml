<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: python | 废纸君]]></title>
  <link href="http://mouer.github.com/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://mouer.github.com/"/>
  <updated>2013-05-15T10:14:37+08:00</updated>
  <id>http://mouer.github.com/</id>
  <author>
    <name><![CDATA[Chen.Qi]]></name>
    <email><![CDATA[mouer73@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[BAE上面搭建微信版本小黄鸡]]></title>
    <link href="http://mouer.github.com/blog/2013/05/14/bae-weixin-flask-xiaohuangji/"/>
    <updated>2013-05-14T00:32:00+08:00</updated>
    <id>http://mouer.github.com/blog/2013/05/14/bae-weixin-flask-xiaohuangji</id>
    <content type="html"><![CDATA[<p>前端时间人人<code>小黄鸡</code>火极一时，贱贱的回复热心喜爱，看了github上面的源码，是调用的simsimi，那好，用微信公共帐号实现一个吧。</p>

<p>服务端是BAE平台 <code>python</code> + <code>flask</code></p>

<p>requests包请自行上传，sae不晓得，bae上面木有～，gist如下：</p>

<p><code>index.py</code></p>

<p>```py</p>

<h1>-<em>- coding:utf-8 -</em>-</h1>

<p>from bae.api import logging
from flask import Flask, g, request, make_response
from simsimi import *
import xml.etree.ElementTree as ET
import hashlib
import time</p>

<p>app = Flask(<strong>name</strong>)
app.debug = True</p>

<p>@app.route('/')
def index():</p>

<pre><code>return '您进错页面了亲～';
</code></pre>

<p>@app.route('/connect', methods=['GET', 'POST'])
def site_connect():</p>

<pre><code>logging.debug('into connect %s' % (request.method))

if request.method == 'GET':# 网站接入，参看微信官方wiki
    return auth()
else: # 获取用户发送过来的消息，并且echo
    return say()
</code></pre>

<p>def say():</p>

<pre><code>xml = request.data
xml_recv = ET.fromstring(xml)
to_user_name = xml_recv.find('ToUserName').text
from_user_name = xml_recv.find('FromUserName').text
content = xml_recv.find('Content').text

logging.debug('to_user_name : %s, from_user_name : %s, content : %s' % (to_user_name, from_user_name, content))

content = handle({'message': '%s' % (content)}, None)

reply = "&lt;xml&gt;&lt;ToUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/ToUserName&gt;&lt;FromUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/FromUserName&gt;&lt;CreateTime&gt;%d&lt;/CreateTime&gt;&lt;MsgType&gt;&lt;![CDATA[text]]&gt;&lt;/MsgType&gt;&lt;Content&gt;&lt;![CDATA[%s]]&gt;&lt;/Content&gt;&lt;FuncFlag&gt;0&lt;/FuncFlag&gt;&lt;/xml&gt;"  % (from_user_name, to_user_name, int(time.time()), content)

logging.debug('reply : %s' % (reply))

reponse = make_response(reply)
reponse.content_type = 'application/xml'
return reponse
</code></pre>

<p>def auth():</p>

<pre><code>token = "xxx" # xxx为微信添加的token，每个人可能不一样
signature = request.args['signature']
timestamp = request.args['timestamp']
nonce = request.args['nonce']
echostr = request.args['echostr']

logging.debug('signature : %s, timestamp : %s, nonce : %s, echostr : %s' % (signature, timestamp, nonce, echostr))

tmp_arr = [token, timestamp, nonce]
tmp_arr.sort()
tmp_str = ''.join(tmp_arr)
code = hashlib.sha1(tmp_str).hexdigest()

if code == signature:
    return echostr
else:
    return ''
</code></pre>

<p>from bae.core.wsgi import WSGIApplication
application = WSGIApplication(app)
```</p>

<p><code>simsimi.py</code></p>

<p>```py</p>

<h1>-<em>-coding:utf-8-</em>-</h1>

<h1>从simsimi读数据</h1>

<p>import requests
import cookielib
import socket
import random</p>

<p>SIMSIMI_KEY = ''</p>

<p>class SimSimi:</p>

<pre><code>def __init__(self):
    self.session = requests.Session()
    self.chat_url = 'http://www.simsimi.com/func/req?lc=ch&amp;msg=%s'
    self.api_url = 'http://api.simsimi.com/request.p?key=%s&amp;lc=ch&amp;ft=1.0&amp;text=%s'
    if not SIMSIMI_KEY:
        self.initSimSimiCookie()

def initSimSimiCookie(self):
    self.session.headers.update({'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:18.0) Gecko/20100101 Firefox/18.0'})
    self.session.get('http://www.simsimi.com/talk.htm')
    self.session.headers.update({'Referer': 'http://www.simsimi.com/talk.htm'})
    self.session.get('http://www.simsimi.com/talk.htm?lc=ch')
    self.session.headers.update({'Referer': 'http://www.simsimi.com/talk.htm?lc=ch'})

def getSimSimiResult(self, message, method='normal'):
    if method == 'normal':
        r = self.session.get(self.chat_url % message)
    else:
        url = self.api_url % (SIMSIMI_KEY, message)
        r = requests.get(url)
    return r

def chat(self, message=''):
    if message:
        r = self.getSimSimiResult(message, 'normal' if not SIMSIMI_KEY else 'api')
        try:
            answer = r.json()['response']
            return answer.encode('utf-8')
        except:
            return random.choice(['呵呵', '。。。', '= =', '=。='])
    else:
        return '叫我干嘛'
</code></pre>

<p>simsimi = SimSimi()</p>

<p>def handle(data, bot):</p>

<pre><code>return simsimi.chat(data['message'])
</code></pre>

<p>if <strong>name</strong> == '<strong>main</strong>':</p>

<pre><code>print handle({'message': '最后一个问题'}, None)
print handle({'message': '还有一个问题'}, None)
print handle({'message': '其实我有三个问题'}, None)
</code></pre>

<p>```</p>

<p><code>app.conf</code></p>

<p>```
handlers:
  - url : /static/(.*)</p>

<pre><code>script: /static/$1
</code></pre>

<ul>
<li><p>url : /.*
script: index.py</p></li>
<li><p>expire : .jpg modify 10 years</p></li>
<li>expire : .swf modify 10 years</li>
<li>expire : .png modify 10 years</li>
<li>expire : .gif modify 10 years</li>
<li>expire : .JPG modify 10 years</li>
<li>expire : .ico modify 10 years
```</li>
</ul>


<p>玩的愉快～</p>
]]></content>
  </entry>
  
</feed>
